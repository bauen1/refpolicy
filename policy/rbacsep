#
# Define the constraints
#
# constrain class_set perm_set expression ;
#
# expression : ( expression )
#	     | not expression
#	     | expression and expression
#	     | expression or expression
#	     | u1 op u2
#	     | r1 role_op r2
#	     | t1 op t2
#	     | u1 op names
#	     | u2 op names
#	     | r1 op names
#	     | r2 op names
#	     | t1 op names
#	     | t2 op names
#
# op : == | !=
# role_op : == | != | eq | dom | domby | incomp
#
# names : name | { name_list }
# name_list : name | name_list name
#

ifdef(`enable_rbacsep', `
#    constrain dir all_dir_perms
#    (
#        r1 == r2
#        or r2 == rbacsep_target_exempt
#        or r1 == rbacsep_source_exempt
#    );
#
#    constrain file all_file_perms
#    (
#        r1 == r2
#        or r2 == rbacsep_target_exempt
#        or r1 == rbacsep_source_exempt
#    );

    # rbacsep_constrained_target_type_attribute: all types that are shared between "users"
    # e.g. user_t, user_home_content_type, ...


    # common file write operations ^= { all_file_perms -read_file_perms }
    define(`rbacsep_file_write_operations', `{ write create setattr relabelfrom relabelto append map unlink link rename execute quotaon mounton audit_access execmod watch watch_mount watch_sb watch_with_perm watch_reads }')

    #######################################################
    # constrains on write operations:
    #
    # rbacsep exempted roles get access to everything that isnt specifically constrained
    #
    # and all domains can write/execute/... to exempted roles (assuming they are permitted by TE)
    define(`rbacsep_object_write_constrains', `
        constrain $1 $2
        (
            r1 == r2
            or t1 == rbacsep_exempt_uncond_type_attribute

            or (
                r1 == rbacsep_exempt_role_attribute
                and t1 != rbacsep_constrained_subject_type_attribute
            )

            or (
                r2 == rbacsep_exempt_role_attribute
                and t2 != rbacsep_constrained_target_type_attribute
            )

            $3
        );
    ')

    #######################################################
    # constrain file { all_file_perms -read_file_perms }
    #
    rbacsep_object_write_constrains(file, { rbacsep_file_write_operations execute_no_trans entrypoint })

    #######################################################
    # constrain lnk_file { all_lnk_file_perms -read_lnk_file_perms }
    #
    rbacsep_object_write_constrains(lnk_file, { rbacsep_file_write_operations })

    #######################################################
    # constrain dir { all_dir_perms -list_dir_perms }
    #
    rbacsep_object_write_constrains(dir, { rbacsep_file_write_operations add_name remove_name reparent rmdir })

    #######################################################
    # constrains on read operations:
    # rbacsep exempted roles get access to everything that isnt specifically constrained
    #
    # every role gets access to rbacsep exempted role unless the type is specifically constrained,
    # this way "sudo nano /etc/abc" as sysadm_r works, but processes or home files from sysadm_r wont
    # be readable to every other role
    #
    define(`rbacsep_object_read_constrains', `
        constrain $1 $2
        (
            r1 == r2
            or t1 == rbacsep_exempt_uncond_type_attribute

            or (
                r1 == rbacsep_exempt_role_attribute
                and t1 != rbacsep_constrained_subject_type_attribute
            )

            or (
                r2 == rbacsep_exempt_role_attribute
                and t2 != rbacsep_constrained_target_type_attribute
            )

            $3
        );
    ')

    #######################################################
    # constrain file read_file_perms
    #
    rbacsep_object_read_constrains(file, { getattr ioctl lock open read })

    #######################################################
    # constrain lnk_file read_lnk_file_perms
    #
    rbacsep_object_read_constrains(lnk_file, { getattr ioctl lock open read })

    #######################################################
    # constrain dir list_dir_perms
    #
    rbacsep_object_read_constrains(dir, { getattr ioctl lock open read search })
')
