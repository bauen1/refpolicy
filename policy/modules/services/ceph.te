policy_module(ceph, 1.1.1)

########################################
#
# Declarations
#

attribute_role ceph_roles;

type ceph_t;
type ceph_exec_t;
init_daemon_domain(ceph_t, ceph_exec_t)
role ceph_roles types ceph_t;

type ceph_log_t;
logging_log_file(ceph_log_t)

type ceph_runtime_t;
files_pid_file(ceph_runtime_t)

type ceph_tmp_t;
files_tmp_file(ceph_tmp_t)

type ceph_tmpfs_t;
files_tmpfs_file(ceph_tmpfs_t)

type ceph_var_lib_t;
files_type(ceph_var_lib_t)
files_mountpoint(ceph_var_lib_t)

########################################
#
# Local policy
#

allow ceph_t self:capability { setuid setgid dac_override dac_read_search chown sys_admin fowner sys_resource };
allow ceph_t self:fifo_file rw_fifo_file_perms;
allow ceph_t self:netlink_route_socket create_netlink_socket_perms;
allow ceph_t self:process { signal_perms setrlimit };
allow ceph_t self:tcp_socket create_stream_socket_perms;
allow ceph_t self:unix_stream_socket create_stream_socket_perms;

can_exec(ceph_t, ceph_exec_t)
can_exec(ceph_t, ceph_tmp_t)
allow ceph_t ceph_var_lib_t:file map;

manage_dirs_pattern(ceph_t, ceph_log_t, ceph_log_t)
manage_files_pattern(ceph_t, ceph_log_t, ceph_log_t)
manage_lnk_files_pattern(ceph_t, ceph_log_t, ceph_log_t)
logging_log_filetrans(ceph_t, ceph_log_t, dir, "ceph")

manage_dirs_pattern(ceph_t, ceph_runtime_t, ceph_runtime_t)
manage_sock_files_pattern(ceph_t, ceph_runtime_t, ceph_runtime_t)
files_pid_filetrans(ceph_t, ceph_runtime_t, dir, "ceph")

manage_files_pattern(ceph_t, ceph_tmp_t, ceph_tmp_t)
files_tmp_filetrans(ceph_t, ceph_tmp_t, file)

manage_dirs_pattern(ceph_t, ceph_tmpfs_t, ceph_tmpfs_t)
manage_files_pattern(ceph_t, ceph_tmpfs_t, ceph_tmpfs_t)
manage_lnk_files_pattern(ceph_t, ceph_tmpfs_t, ceph_tmpfs_t)
fs_tmpfs_filetrans(ceph_t, ceph_tmpfs_t, { dir file lnk_file })

manage_dirs_pattern(ceph_t, ceph_var_lib_t, ceph_var_lib_t)
manage_files_pattern(ceph_t, ceph_var_lib_t, ceph_var_lib_t)
manage_lnk_files_pattern(ceph_t, ceph_var_lib_t, ceph_var_lib_t)
files_var_lib_filetrans(ceph_t, ceph_var_lib_t, dir, "ceph")

corecmd_exec_bin(ceph_t)

dev_read_urand(ceph_t)
dev_read_rand(ceph_t)
dev_read_sysfs(ceph_t)

files_read_etc_files(ceph_t)
files_read_usr_files(ceph_t)
files_getattr_all_mountpoints(ceph_t)

fs_getattr_xattr_fs(ceph_t)
fs_setattr_tmpfs_dirs(ceph_t)
fs_read_cgroup_files(ceph_t)

kernel_read_crypto_sysctls(ceph_t)
kernel_read_network_state(ceph_t)
kernel_read_system_state(ceph_t)
kernel_read_kernel_sysctls(ceph_t)

lvm_domtrans(ceph_t)

udev_search_pids(ceph_t)
kernel_search_fs_sysctls(ceph_t)

udevadm_domtrans(ceph_t)
fstools_domtrans(ceph_t)

storage_raw_rw_fixed_disk(ceph_t)
storage_setattr_fixed_disk_dev(ceph_t)

logging_send_syslog_msg(ceph_t)

term_getattr_ptmx(ceph_t)

corenet_tcp_bind_all_unreserved_ports(ceph_t)
corenet_tcp_bind_all_nodes(ceph_t)
corenet_tcp_connect_all_unreserved_ports(ceph_t)

init_read_state(ceph_t)
# manage ceph-osd@...
init_search_units(ceph_t)
init_stream_connect(ceph_t)
init_read_runtime_files(ceph_t)
init_reload(ceph_t)
init_start_generic_units(ceph_t)

libs_exec_lib_files(ceph_t)

miscfiles_read_localization(ceph_t)
miscfiles_read_generic_certs(ceph_t)

# ceph-volume
domain_use_interactive_fds(ceph_t)
userdom_use_user_ptys(ceph_t)
gen_require(`
    type mount_t;
')
allow mount_t self:capability dac_read_search;

#
optional_policy(`
    mount_domtrans(ceph_t)
')

# FIXME: create interfaces for this
gen_require(`
    type device_t;
')
allow ceph_t device_t:lnk_file setattr;

# FIXME: cleanup
init_get_generic_units_status(ceph_t)
gen_require(`
    type systemd_unit_t;
')
allow ceph_t systemd_unit_t:file getattr_file_perms;
gen_require(`
    type tmpfs_t;
')
allow ceph_t tmpfs_t:filesystem getattr;
allow ceph_t tmpfs_t:lnk_file read_lnk_file_perms;

# secmark
# refer to https://docs.ceph.com/docs/master/rados/configuration/network-config-ref/ for ports
type ceph_port_t;
corenet_port(ceph_port_t)
allow ceph_t ceph_port_t:tcp_socket { name_bind name_connect };

type ceph_packet_t;
corenet_packet(ceph_packet_t)
corenet_server_packet(ceph_packet_t)
corenet_client_packet(ceph_packet_t)
allow ceph_t ceph_packet_t:packet { send recv };
