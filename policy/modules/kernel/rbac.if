## <summary>Role-based access control policy</summary>
## <required val="true">
##  Contains attributes used in RBAC policy
## </required>

###########################################################
## <summary>
##  relabel and create objects bypassing rbac
##  unconditionally.
## </summary>
## <param name="domain">
##  <summary>
##  Domain allowed access.
##  </summary>
## </param>
#
interface(`rbac_obj_role_change_exemption_uncond', `
    gen_require(`
        attribute rbac_obj_role_change_exempt_uncond_type_attribute;
    ')

    typeattribute $1 rbac_obj_role_change_exempt_uncond_type_attribute;
')

###########################################################
## <summary>
##  transition to new processes bypassing rbac
##  unconditionally.
## </summary>
## <param name="domain">
##  <summary>
##  Domain allowed access.
##  </summary>
## </param>
#
interface(`rbac_proc_role_change_exemption_uncond', `
    gen_require(`
        attribute rbac_proc_role_change_exempt_uncond_type_attribute;
    ')

    typeattribute $1 rbac_proc_role_change_exempt_uncond_type_attribute;
')

###########################################################
## <summary>
##  fully exmept this domain from rbac constrains.
## </summary>
## <param name="domain">
##  <summary>
##  Domain allowed access.
##  </summary>
## </param>
#
interface(`rbac_exemption_uncond', `
	rbac_obj_role_change_exemption_uncond($1)
    rbac_proc_role_change_exemption_uncond($1)
')

###########################################################
## <summary>
##  Mark a role as user role
## </summary>
## <param name="role">
##  <summary>
##   Role allowed access.
##  </summary>
## </param>
#
interface(`rbac_change_role_user_target_role', `
    gen_require(`
        attribute_role rbac_change_role_user_target_role_attribute;
    ')

    roleattribute $1 rbac_change_role_user_target_role_attribute;
')

## <summary>
##  Mark a type as user type
## </summary>
## <param name="domain">
##  <summary>
##   Domain allowed access.
##  </summary>
## </param>
#
interface(`rbac_change_role_user_target_type', `
    gen_require(`
        attribute rbac_change_role_user_target_type_attribute;
    ')

    typeattribute $1 rbac_change_role_user_target_type_attribute;
')

###########################################################
## <summary>
##  Allow a domain to change the role to a user role and user type
## </summary>
## <param name="domain">
##  <summary>
##   Domain allowed access.
##  </summary>
## </param>
#
interface(`rbac_change_role_user_source_type', `
    gen_require(`
        attribute rbac_change_role_user_source_type_attribute;
    ')

    typeattribute $1 rbac_change_role_user_source_type_attribute;
')

###########################################################
## <summary>
##  Domain object allowed to be relabled or created
## </summary>
## <param name="domain">
##  <summary>
##   Domain allowed access.
##  </summary>
## </param>
#
interface(`rbac_change_role_user_target_object_type', `
    gen_require(`
        attribute rbac_change_role_user_target_object_type_attribute;
    ')

    typeattribute $1 rbac_change_role_user_target_object_type_attribute;
')

###########################################################
## <summary>
##  Domain is rbacsep exempted unconditionally
## </summary>
## <param name="domain">
##  <summary>
##  Domain allowed access.
##  </summary>
## </param>
#
interface(`rbacsep_exempt_type_uncond', `
    gen_require(`
        attribute rbacsep_exempt_uncond_type_attribute;
    ')

    typeattribute $1 rbacsep_exempt_uncond_type_attribute;
')

###########################################################
## <summary>
##  Role is rbac exempted, except for types explicitly marked
##  as confined by rbacsep_target_type_constrained()
## </summary>
## <param name="role">
##  <summary>
##  Role allowed access.
##  </summary>
## </param>
#
interface(`rbacsep_exempt_role', `
    gen_require(`
        attribute_role rbacsep_exempt_role_attribute;
    ')

    roleattribute $1 rbacsep_exempt_role_attribute;
')

###########################################################
## <summary>
##  Domain is always target constrained by rbacsep, even if
##  the target role is not.
## </summary>
## <param name="domain">
##  <summary>
##  Domain allowed access.
##  </summary>
## </param>
#
interface(`rbacsep_subject_type_constrained', `
    gen_require(`
        attribute rbacsep_constrained_subject_type_attribute;
    ')

    typeattribute $1 rbacsep_constrained_subject_type_attribute;
')

###########################################################
## <summary>
##  Domain is always constrained by rbacsep, even if the source
##  role is rbacsep exempted.
## </summary>
## <param name="domain">
##  <summary>
##  Domain allowed access.
##  </summary>
## </param>
#
interface(`rbacsep_target_type_constrained', `
    gen_require(`
        attribute rbacsep_constrained_target_type_attribute;
    ')

    typeattribute $1 rbacsep_constrained_target_type_attribute;
')
