policy_module(local, 1.0)

####################
# required for booting

# TODO: migrate parts of this to system local policies where appropiate

# [    6.469260 ] audit: type=1400 audit(1575813032.156:154): avc:  denied  { use  } for  pid=1 comm="systemd" path="socket:[12034]" dev="sockfs" ino=12034 scontext=system_u:system_r:init_t:s0 tcontext=system_u:system_r:syslogd_t:s0 tclass=fd permissive=0
gen_require(`
    type init_t;
    type syslogd_t;
')
allow init_t syslogd_t:fd use;

####################
# ansible gather_facts: set ansible_service_mgr correctly
gen_require(`
    type staff_t;
')
init_read_state(staff_t)

####################
# timedatectl set-ntp <yes/no>
gen_require(`
    type ntpd_t;
')
init_get_generic_units_status(ntpd_t)
init_start_generic_units(ntpd_t)
init_stop_generic_units(ntpd_t)

####################
# ansible: use sudo from an ssh session without tty
# FIXME: why isn't this allowed by default ?
gen_require(`
    attribute sudodomain;
    type sshd_t;
')
allow sudodomain sshd_t:fifo_file rw_inherited_fifo_file_perms;

####################
# linux 5.4
gen_require(`
    type policykit_t;
    type policykit_var_lib_t;
')
allow policykit_t policykit_var_lib_t:dir watch;

####################
# smartctl needs to read /var/lib/smartmontools/drivedb
gen_require(`
    type fsadm_t;
    type fsdaemon_var_lib_t;
')
allow fsadm_t fsdaemon_var_lib_t:file read_file_perms;

####################
# tmux
gen_require(`
    attribute screen_domain;
    type user_home_t;
')

# tmux-resurrect: restore pwd
userdom_search_all_user_home_content(screen_domain)

# tmux-resurrect: write save files
allow screen_domain user_home_t:dir manage_dir_perms;
allow screen_domain user_home_t:file manage_file_perms;

# FIXME: why is this even required ?
# resolvconf + dhcpc
gen_require(`
    type dhcpc_t;
    type initrc_var_run_t;
')
allow dhcpc_t initrc_var_run_t:dir getattr;

# wireguard-dpms install uses depmod and depmod wants to read /boot/System-*
# FIXME: remove once all vps are on a kernel with wireguard inside
gen_require(`
    type kmod_t;
')
files_read_kernel_symbol_table(kmod_t)

# ========= mail =========
# dovecot on he-ipv6-web0
require {
    type dovecot_t, dovecot_auth_t;
    type tmpfs_t;
    type postfix_master_t, postfix_runtime_t;
}

mta_read_spool_files(dovecot_t)

# this not so much, but might be required for correct functionality
allow dovecot_t postfix_master_t:unix_stream_socket connectto;

# FIXME: /var/lib/mail_db
allow dovecot_auth_t postfix_runtime_t:file rw_file_perms;

# ========= ceph =========
# ansible ceph install: apt add gpg key
gen_require(`
    type gpg_t;
    type gpg_agent_t;
')
userdom_manage_user_tmp_files(gpg_agent_t)
userdom_manage_user_tmp_dirs(gpg_agent_t)
userdom_manage_user_tmp_sockets(gpg_agent_t)
userdom_manage_user_tmp_sockets(gpg_t)
# to actually update /etc/apt/trusted.gpg.d
files_manage_etc_files(gpg_t)

# allow ansible to verify ssh config
require {
    type sshd_exec_t;
    type sysadm_t;
}
can_exec(sysadm_t, sshd_exec_t)

# allow ansible verify dnsmasq configfiles
require {
    type dnsmasq_exec_t;
}
can_exec(sysadm_t, dnsmasq_exec_t)

# allow ansible to verify nftables config
gen_require(`
    type iptables_t;
    type user_tmp_t;
')
read_files_pattern(iptables_t, user_tmp_t, user_tmp_t)
