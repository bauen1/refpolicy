#============= wireshark_t ==============
policy_module(local_wireshark, 1.0)
gen_require(`
    type wireshark_t;
    type dri_device_t;
    class chr_file { getattr ioctl open read write };
    class netlink_generic_socket { create setopt bind getattr read write };
    class netlink_netfilter_socket { create write };
    class bluetooth_socket { create ioctl };
    type proc_net_t;
    class packet_socket { map };
    class process { setcap setsched };
')

allow wireshark_t dri_device_t:chr_file { getattr ioctl open read write };

allow wireshark_t self:netlink_generic_socket { create setopt bind getattr write read };
allow wireshark_t self:netlink_netfilter_socket { create write read };
allow wireshark_t self:bluetooth_socket { create ioctl bind setopt };
allow wireshark_t proc_net_t:file { getattr open read };
allow wireshark_t self:packet_socket map;
allow wireshark_t self:process { setcap setsched };

# FIXME: maybe not all necessary
gen_require(`
    type session_dbusd_runtime_t;
    type staff_t;
    type staff_systemd_t;
    type sysctl_crypto_t;
    type user_runtime_t;
')

allow wireshark_t session_dbusd_runtime_t:sock_file write;

allow wireshark_t staff_t:unix_stream_socket connectto;
allow wireshark_t staff_systemd_t:unix_stream_socket connectto;

kernel_read_crypto_sysctls(wireshark_t)

allow wireshark_t user_runtime_t:dir { setattr write };

#!!!! This avc can be allowed using the boolean 'allow_write_xshm'
gen_require(`
    type xserver_tmpfs_t;
')
allow wireshark_t xserver_tmpfs_t:file { write map };


