policy_module(local_desktop, 1.0)

gen_require(`
    attribute session_bus_type;
    attribute systemd_user_session_type;

    role staff_r;
    role user_r;

    type staff_systemd_t;
    type system_dbusd_t;
    type system_dbusd_runtime_t;
    type staff_t;
    type user_tmp_t;
    type user_systemd_t;
    type systemd_unit_t;
    type xdg_data_t;
    type xdg_videos_t;
    type xdg_config_t;
    type home_root_t;
    type user_home_dir_t;
    type cgroup_t;
    type sysctl_crypto_t;
    type user_home_t;
    type systemd_user_runtime_t;
    type tmpfs_t;
    type console_device_t;
    type lib_t;

    type devicekit_power_t;
    type gnome_xdg_config_t;
    type gpg_agent_t;
    type initrc_t;
    type init_runtime_t;
    type init_t;
    type kernel_t;
    type lvm_t;
    type mpd_port_t;
    type pstore_t;
    type pulseaudio_t;
    type session_dbusd_runtime_t;
    type staff_dbusd_t;
    type sysfs_t;
    type syslogd_t;
    type udevadm_t;
    type udev_runtime_t;
    type user_dbusd_t;
    type var_lib_t;
    type var_lock_t;
    type xdg_config_t;
    type xdm_var_lib_t;

    class netlink_selinux_socket { read };
    class process { noatsecure rlimitinh siginh sigkill signal signull getcap getsched execmem ptrace };
    class process2 { nnp_transition };
    class unix_stream_socket { getattr read write ioctl connectto };
    class cap_userns { sys_admin sys_ptrace kill };
    class tcp_socket { name_bind };
')

# FIXME: not required ?
allow staff_dbusd_t systemd_user_runtime_t:dir getattr;

#============ lvm_t ============
# lvm2 fix boot
allow lvm_t pstore_t:dir search_dir_perms;
allow lvm_t tmpfs_t:dir manage_dir_perms;
allow lvm_t tmpfs_t:file manage_file_perms;

# init lvm2
allow initrc_t lvm_t:process2 nnp_transition;

# systemd boot (FIXME: are all required ?)
allow init_t self:cap_userns { kill sys_admin setpcap setuid };

# FIXME: why ??
allow syslogd_t self:cap_userns { sys_ptrace };

#============ udevadm_t ============
# fix udevadm_t boot (invoked by systemd unit)
allow udevadm_t udev_runtime_t:file { open read };
allow udevadm_t var_lock_t:file write;

allow session_bus_type system_dbusd_t:dbus send_msg;
allow session_bus_type system_dbusd_t:unix_stream_socket connectto;
allow session_bus_type system_dbusd_runtime_t:dir search;
allow session_bus_type system_dbusd_runtime_t:sock_file write;

# staff_dbusd_t: might be necessary, not sure
allow staff_dbusd_t xdg_config_t:dir { manage_dir_perms };
allow staff_dbusd_t xdg_config_t:file { manage_file_perms };
allow staff_dbusd_t xdg_data_t:dir { search };

# might be necessary

# FIXME: might be unecessary but seems sensible
allow devicekit_power_t initrc_t:dbus send_msg;

allow session_bus_type sysfs_t:file { open read };

# maybe required
allow systemd_user_session_type system_dbusd_runtime_t:dir search;

# this probably shouldn't be allowed, but oh well
allow systemd_user_session_type init_runtime_t:sock_file write;

# allow execution of ~/.local/bin/*
# FIXME: shouldn't be required
can_exec(staff_t, xdg_data_t)

gen_require(`
    type sysadm_t;
    type selinux_config_t;
    class icmp_socket { create };
    class rawip_socket { create getopt read setopt write };
    class capability { net_raw };
    type dri_device_t;
    class chr_file { rw_chr_file_perms map };
')

# FIXME: shouldn't be required or should be somewhere else
# allow building in /etc/selinux/refpolicy/src
can_exec(sysadm_t, selinux_config_t)

# might want to allow this
allow staff_t dri_device_t:chr_file { rw_chr_file_perms map };
allow thunderbird_t dri_device_t:chr_file rw_chr_file_perms;

#============= devicekit_disk_t ==============
gen_require(`
    type devicekit_disk_t;
    type tmpfs_t;
')

allow devicekit_disk_t tmpfs_t:dir { add_name remove_name write };
allow devicekit_disk_t tmpfs_t:file { create lock open read unlink write };

#
gen_require(`
    type systemd_logind_t;
    type devicekit_disk_t;
    type devicekit_power_t;
')

#============= local_login_t ==============
gen_require(`
    type local_login_t;
')
# sensible, but might not be necessary

allow local_login_t cgroup_t:dir { getattr open setattr read write search remove_name rmdir };
allow local_login_t cgroup_t:file rw_file_perms;
allow local_login_t cgroup_t:lnk_file read_lnk_file_perms;
allow local_login_t tmpfs_t:filesystem getattr;

# dontaudit
gen_require(`
    type auditctl_t;
    type auditd_etc_t;
')
dontaudit auditctl_t auditd_etc_t:file map;

# seems somewhat sensible
gen_require(`
    type staff_gkeyringd_t;
')
allow staff_gkeyringd_t systemd_logind_t:dbus send_msg;
allow systemd_logind_t staff_gkeyringd_t:dbus send_msg;
allow systemd_logind_t initrc_t:dir search;
allow systemd_logind_t initrc_t:file read_file_perms;

# FIXME: systemd socket activation ?
allow staff_gkeyringd_t session_dbusd_runtime_t:sock_file write;
allow staff_gkeyringd_t staff_dbusd_t:unix_stream_socket { getattr ioctl read write };
allow staff_gkeyringd_t staff_systemd_t:unix_stream_socket connectto;

# FIXME: required ?
gen_require(`
    type staff_sudo_t;
')
allow staff_sudo_t cgroup_t:dir { getattr search read write add_name create open setattr remove_name rmdir };
allow staff_sudo_t cgroup_t:file { getattr open read write };
allow staff_sudo_t tmpfs_t:filesystem getattr;

gen_require(`
    type initctl_t;
')
allow staff_sudo_t initctl_t:fifo_file getattr;

# might not be required
gen_require(`
    type sysadm_t;
    type systemd_logind_t;
    type systemd_hostnamed_t;
')
allow sysadm_t systemd_logind_t:dbus send_msg;
allow systemd_hostnamed_t initrc_t:dbus send_msg;

#============= udevadm_t ==============
# might not be required
gen_require(`
    type udevadm_t;
    type fixed_disk_device_t;
    type initrc_lock_t;
    class blk_file { getattr };
')
allow udevadm_t fixed_disk_device_t:blk_file getattr;
allow udevadm_t initrc_lock_t:file write;

# might be pkexec too
gen_require(`
    type policykit_t;
    type xdg_cache_t;
')
allow policykit_t xdg_cache_t:dir search;

# allow semodule to access /etc/selinux/local-policies
gen_require(`
    type load_policy_t;
    type selinux_config_t;
')
allow load_policy_t selinux_config_t:file map;

#
gen_require(`
    type dpkg_t;
')
allow sysadm_t dpkg_t:process2 nnp_transition;

# FIXME: ???
gen_require(`
    type node_t;
    type unreserved_port_t;
    type net_conf_t;
    class tcp_socket { name_connect };
')
allow sysadm_t node_t:tcp_socket node_bind;
allow staff_t unreserved_port_t:udp_socket name_bind;
allow staff_t unreserved_port_t:tcp_socket name_bind;

# misc.
allow staff_systemd_t unreserved_port_t:tcp_socket name_connect;
allow staff_systemd_t node_t:udp_socket node_bind;

# 'ss'
allow sysadm_t self:netlink_tcpdiag_socket create;

# seems reasonable
gen_require(`
    type colord_t;
    type colord_exec_t;
')
can_exec(colord_t, colord_exec_t)

# pip3
allow staff_t user_tmp_t:file { relabelfrom relabelto };
allow staff_t user_tmp_t:dir { relabelfrom relabelto };

# allow ssh to connect to anything
gen_require(`
    type ssh_t;
    type unreserved_port_t;
')
allow ssh_t unreserved_port_t:tcp_socket name_connect;

#============= virtlogd_t ==============
gen_require(`
    type virtlogd_t;
    type virt_runtime_t;
    type svirt_t;
    type udev_runtime_t;
')
allow virtlogd_t self:unix_stream_socket { listen accept };
allow virtlogd_t virt_runtime_t:sock_file { manage_sock_file_perms };
allow virtlogd_t self:process getsched;
allow svirt_t udev_runtime_t:file { open read getattr };

# apt notify
gen_require(`
    type apt_t;
')
allow sysadm_t apt_t:dbus send_msg;

# laptop_mode / udev
gen_require(`
    type udev_t;
    type sysctl_fs_t;
    type sysctl_kernel_t;
    type sysctl_vm_t;
    type var_lock_t;
    type var_run_t;
    type xdm_tmp_t;
')
allow udev_t sysctl_fs_t:dir search;
allow udev_t sysctl_kernel_t:file write;
allow udev_t sysctl_vm_t:file write;
can_exec(udev_t, usr_t)
allow udev_t var_lock_t:file { lock open write };
allow udev_t var_lock_t:dir { add_name write };
allow udev_t var_run_t:file { append create getattr ioctl open read rename setattr unlink write };
allow udev_t xdm_tmp_t:dir { getattr open read };
allow udev_t xdm_tmp_t:sock_file getattr;
allow udev_t initrc_lock_t:file write;

# avahi browser
allow staff_t lib_t:file lock;
avahi_dbus_chat(staff_t)

# FIXME: flatpak run
gen_require(`
    type fuse_device_t;
    type boot_t;
')
allow staff_t boot_t:lnk_file read_lnk_file_perms;
allow staff_t fuse_device_t:chr_file { open read write };
allow staff_systemd_t fuse_device_t:chr_file getattr;
allow staff_t user_home_t:file execmod;
allow staff_systemd_t systemd_user_runtime_t:file { create getattr open unlink write };

# FIXME: this shouldn't be here
allow staff_t self:capability { net_admin dac_read_search };

# FIXME: this is wrong !
can_exec(staff_t, var_lib_t)

# allow access to bluetooth
gen_require(`
    class bluetooth_socket { bind create getopt ioctl read setopt write };
')
allow staff_t self:bluetooth_socket { bind create getopt ioctl read setopt write };
allow system_dbusd_t initrc_t:bluetooth_socket { read write };

# FIXME: not required for boot
gen_require(`
    type alsa_t;
    type var_run_t;
')
allow alsa_t self:process { getsched setsched signal };

# actually this needs to go!
allow alsa_t var_run_t:file { manage_file_perms };

# discord flatpak
allow staff_t user_tmp_t:dir mounton;
fs_read_tmpfs_symlinks(staff_t)
fs_rw_tmpfs_files(staff_t)
allow staff_t tmpfs_t:file map;

#============= xfpm-backlight-helper ==============
# (why is this even in the staff_t domain ....) missing type transition from pkexec_t ?
gen_require(`
    type sysfs_t;
')
allow staff_t sysfs_t:file write;

#============= nm-applet ==============
gen_require(`
    type gconf_tmp_t;
')
allow staff_t gconf_tmp_t:file map;

#============= mozilla_t ==============
# probably not required
gen_require(`
    type mozilla_t;
    type gnome_xdg_config_t;
    class unix_stream_socket { ioctl read write };
    type cgroup_t;
    type user_home_t;
    type utempter_t;
')
devicekit_dbus_chat(devicekit_power_t)
allow mozilla_t session_dbusd_runtime_t:sock_file { getattr write };
allow mozilla_t staff_systemd_t:unix_stream_socket connectto;
allow mozilla_t var_lib_t:file map;
gnome_stream_connect_gconf(mozilla_t)
allow mozilla_t gconf_tmp_t:file { open read write map };
allow mozilla_t gnome_xdg_config_t:file map;
allow thunderbird_t gnome_xdg_config_t:file map;
allow thunderbird_t gconf_tmp_t:file { open read write map };
allow mozilla_t self:process ptrace;
allow mozilla_t sysctl_crypto_t:dir getattr;

#============= thunderbird_t ==============
gen_require(`
    type thunderbird_t;
    type thunderbird_home_t;
    type tmp_t;
')
can_exec(thunderbird_t, bin_t)
allow thunderbird_t session_dbusd_runtime_t:sock_file write;
kernel_read_crypto_sysctls(thunderbird_t)
allow thunderbird_t sysfs_t:dir read;
allow thunderbird_t sysfs_t:file { getattr open read };
allow thunderbird_t sysfs_t:lnk_file { getattr read };
allow thunderbird_t staff_systemd_t:unix_stream_socket connectto;
allow thunderbird_t var_lib_t:file { getattr open read map };
allow thunderbird_t thunderbird_home_t:file map;
allow thunderbird_t self:process ptrace;
allow thunderbird_t dri_device_t:chr_file { getattr ioctl open read write };

#============= qemu_t ==============
qemu_role(staff_r, staff_t)
gen_require(`
    type qemu_t;
    type user_home_t;
')
allow qemu_t user_home_t:file { getattr read open lock };
allow qemu_t session_dbusd_runtime_t:sock_file write;
allow qemu_t staff_dbusd_t:unix_stream_socket connectto;
allow qemu_t systemd_user_session_type:unix_stream_socket connectto;
allow qemu_t xdg_data_t:file { getattr map open read };
allow qemu_t usr_t:file map;

# xfce4 wants to map some sort of cache
gen_require(`
    type var_lib_t;
')
allow staff_t var_lib_t:file map;

#############################
# xfce4-screensaver
allow staff_t console_device_t:chr_file { write };
systemd_use_logind_fds(staff_t)

# xfce4 notifications
logging_send_syslog_msg(staff_t)

# xfce4-power-manager
systemd_write_inherited_logind_inhibit_pipes(staff_t)
